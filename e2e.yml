services:
  postgres:
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    image: djangoblog_local_postgres_img
    container_name: djangoblog_local_postgres
    restart: always
    env_file:
      - ./.envs/local/postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    # user: "${UID:-1000}:${GID:-1000}" #<- postgresにはこれはかけない
    healthcheck:
      #ヘルスチェック(postgresが正常に動作しているかどうか)は以下のスクリプトを実行して行う
      test: ["CMD", "/usr/local/bin/check-db.sh"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: ./backend/dockerfile/local/Dockerfile
    working_dir: /app
    image: djangoblog_local_backend_img
    container_name: djangoblog_local_backend
    restart: always
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.envs/local/django
      - ./.envs/local/postgres
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
  frontend:
    build: 
      context: ./frontend
      dockerfile: ./dockerfile/local/Dockerfile
    working_dir: /app
    image: djangoblog_local_frontend_img
    container_name: djangoblog_local_frontend
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    user: "${UID:-1000}:${GID:-1000}"
    restart: always
    ports:
      - "5173:5173"
    command: npm run dev --host
  playwright-mock:
    build:
      context: .
      dockerfile: ./playwright-mock/dockerfile/local/Dockerfile
    image: djangoblog_local_playwright_mock_img
    container_name: djangoblog_local_playwright_mock
    profiles:
      - e2e-mock
    depends_on:
      - backend
      - frontend
    working_dir: /app
    volumes:
      - ./playwright-mock:/app  # ← テストケースファイルはこの中のe2e_testsディレクトリだが、test_resultsもここに作成される
    # entrypoint: [ "tail", "-f", "/dev/null" ]  # デバッグ用。任意で変更可。
  playwright-real:
    build:
      context: .
      dockerfile: ./playwright-real/dockerfile/local/Dockerfile
    image: djangoblog_local_playwright_real_img
    container_name: djangoblog_local_playwright_real
    profiles: # 単にdocker-compose upをしただけでは、このplaywrightサービスは動かないようにする --profile e2e-realが指定されたら動かせる
      - e2e-real
    # depends_on:
    #   - backend
    #   - frontend
    working_dir: /app
    volumes:
      - ./playwright-real/e2e_tests:/app/e2e_tests
      - ./backend:/app
    env_file:
      - ./.envs/local/django
      - ./.envs/local/postgres
    environment:
      - DJANGO_ALLOW_ASYNC_UNSAFE=1
    #   # - DJANGO_SETTINGS_MODULE=config.settings_fortest
    #   - DJANGO_SETTINGS_MODULE=backend.config.settings_fortest
    #   # - PYTHONPATH=/app/backend
    #   - PYTHONPATH=/app
    # entrypoint: [ "tail", "-f", "/dev/null" ]  # デバッグ用。任意で変更可
  # nginx:
  #   image: nginx:latest
  #   container_name: djangoblog_local_nginx
  #   restart: always
  #   # user: "${UID}:${GID}" # いらん
  #   depends_on:
  #     - backend
  #     - frontend
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/cert.pem:/etc/nginx/cert.pem
  #     - ./nginx/key.pem:/etc/nginx/key.pem
  #   ports:
  #     - "443:443"
volumes:
  db_data:
  node_modules: