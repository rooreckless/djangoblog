"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from corsheaders.defaults import default_headers
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7l58s8yj#fvuit@%93a+2x9=5rs5dgxcf!zj$fd#^3704b-2&%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #↓の2つを追加しapiアプリへのアクセスを可能にして、そのアクセスをブラウザでRestFramework画面で見れるようにする
    "rest_framework",
    "api",
    # swaggerUIを用いたAPIのドキュメンテーションに必要
    'drf_spectacular',
    # cors対策 django-cors-headers
    "corsheaders",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # cors対策 django-cors-headers
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# docker-composeのpostgresqlにつなぐのに必要
# なお pip install pycopg[binary]がないと動かない　https://github.com/psycopg/psycop
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': os.environ.get('POSTGRES_PORT'),
    }
}

REST_FRAMEWORK = {
    # drf-specutacularを使うために使う https://drf-spectacular.readthedocs.io/en/latest/readme.html
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    # DRFとしては、jsonを返すようにし、ブラウザでAPIを実行した結果を見られるようにする。
    # https://www.django-rest-framework.org/api-guide/renderers/
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ]
}
# drf-specutacularで表示するページ用の設定
SPECTACULAR_SETTINGS = {
    'TITLE': 'Your Project API',                # タイトル
    'DESCRIPTION': 'Your project description',  # 説明
    'VERSION': '0.0.1',                         # 表記するバージョン
    'SERVE_INCLUDE_SCHEMA': False,              # Trueにすると、 /api/schema　も表示されるようになるがいらないのでFalseにする
    # OTHER SETTINGS
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# 日本語化とTZのJST指定
LANGUAGE_CODE = 'ja'
# https://djangobrothers.com/blogs/django_datetime_localtime/
USE_TZ = True
TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Vueアプリ（localhost:5173）からのアクセスを許可
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]

# OPTIONS リクエストに対応
CORS_ALLOW_HEADERS = list(default_headers) + [
    # 必要に応じてカスタムヘッダーを追加できるよう、準備だけしている状態
]